name: EpicGames to Discord

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour (to track Epic's changes)
  push:
    branches:
      - main  # Runs on push to main branch
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write  # Allow pushing changes to the repo

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Python Dependencies
        uses: actions/cache@v3  # Cache pip dependencies
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            # Cache key based on OS and requirements.txt hash
            # This ensures that the cache is updated whenever requirements.txt changes
            # The cache will be restored if the key matches or if it starts with the restore-keys prefix
            # This allows for partial cache hits, which can be useful if the requirements.txt file changes frequently
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Script
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: python main.py

      - name: Commit & Push Updated epics.json
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin main || true  # Prevent errors if there are no new changes
          git add epics.json
          git commit -m "Updated epics.json (free-games tracking)" || exit 0
          git push origin main
